"""empty message

Revision ID: 9de526b3aea6
Revises: 
Create Date: 2025-09-04 04:54:42.640850

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '9de526b3aea6'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('daily_question',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('question', sa.Text(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('employee',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('first_name', sa.String(length=60), nullable=False),
    sa.Column('last_name', sa.String(length=60), nullable=False),
    sa.Column('nickname', sa.String(length=255), nullable=False),
    sa.Column('job_title', sa.String(length=255), nullable=True),
    sa.Column('is_admin', sa.Boolean(), nullable=False),
    sa.Column('scrum', sa.Boolean(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('friday_question',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('question', sa.Text(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('random_question',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('question', sa.Text(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('scrum_question',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('question', sa.Text(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('calendar',
    sa.Column('call_id', sa.Integer(), nullable=False),
    sa.Column('date_time', sa.TIMESTAMP(timezone=True), nullable=False),
    sa.Column('employee_id', sa.BigInteger(), nullable=False),
    sa.Column('scrum_id', sa.BigInteger(), nullable=False),
    sa.Column('purpose', sa.Text(), nullable=False),
    sa.Column('call_link', sa.Text(), nullable=False),
    sa.Column('notified', sa.Enum('wait', 'notified', 'linked', name='notified_status'), nullable=False),
    sa.Column('status', sa.Enum('wait', 'process', 'successful', 'canceled', name='call_status'), nullable=False),
    sa.ForeignKeyConstraint(['employee_id'], ['employee.id'], ),
    sa.ForeignKeyConstraint(['scrum_id'], ['employee.id'], ),
    sa.PrimaryKeyConstraint('call_id')
    )
    op.create_table('default_calendar',
    sa.Column('call_id', sa.Integer(), nullable=False),
    sa.Column('call_time', sa.TIME(timezone=True), nullable=False),
    sa.Column('employee_id', sa.BigInteger(), nullable=False),
    sa.Column('scrum_id', sa.BigInteger(), nullable=False),
    sa.ForeignKeyConstraint(['employee_id'], ['employee.id'], ),
    sa.ForeignKeyConstraint(['scrum_id'], ['employee.id'], ),
    sa.PrimaryKeyConstraint('call_id')
    )
    op.create_table('friday_form',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('date_time', sa.TIMESTAMP(timezone=True), nullable=False),
    sa.Column('employee_id', sa.Integer(), nullable=False),
    sa.Column('question_id', sa.Integer(), nullable=False),
    sa.Column('answer', sa.Text(), nullable=False),
    sa.ForeignKeyConstraint(['employee_id'], ['employee.id'], ),
    sa.ForeignKeyConstraint(['question_id'], ['friday_question.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('inactive_employee',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('employee_id', sa.BigInteger(), nullable=False),
    sa.Column('start_datetime', sa.TIMESTAMP(timezone=True), nullable=False),
    sa.Column('end_datetime', sa.TIMESTAMP(timezone=True), nullable=False),
    sa.Column('reason', sa.Text(), nullable=False),
    sa.ForeignKeyConstraint(['employee_id'], ['employee.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('daily_form',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('call_id', sa.Integer(), nullable=False),
    sa.Column('question_id', sa.Integer(), nullable=False),
    sa.Column('answer', sa.Text(), nullable=False),
    sa.ForeignKeyConstraint(['call_id'], ['calendar.call_id'], ),
    sa.ForeignKeyConstraint(['question_id'], ['daily_question.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('missed_call',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('call_id', sa.Integer(), nullable=False),
    sa.Column('reason', sa.Text(), nullable=False),
    sa.ForeignKeyConstraint(['call_id'], ['calendar.call_id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('random_form',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('call_id', sa.Integer(), nullable=False),
    sa.Column('question_id', sa.Integer(), nullable=False),
    sa.Column('answer', sa.Text(), nullable=False),
    sa.ForeignKeyConstraint(['call_id'], ['calendar.call_id'], ),
    sa.ForeignKeyConstraint(['question_id'], ['random_question.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('scrum_form',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('call_id', sa.Integer(), nullable=False),
    sa.Column('question_id', sa.Integer(), nullable=False),
    sa.Column('answer', sa.Text(), nullable=False),
    sa.ForeignKeyConstraint(['call_id'], ['calendar.call_id'], ),
    sa.ForeignKeyConstraint(['question_id'], ['scrum_question.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('scrum_form')
    op.drop_table('random_form')
    op.drop_table('missed_call')
    op.drop_table('daily_form')
    op.drop_table('inactive_employee')
    op.drop_table('friday_form')
    op.drop_table('default_calendar')
    op.drop_table('calendar')
    op.drop_table('scrum_question')
    op.drop_table('random_question')
    op.drop_table('friday_question')
    op.drop_table('employee')
    op.drop_table('daily_question')
    # ### end Alembic commands ###
